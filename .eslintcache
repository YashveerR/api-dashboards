[{"C:\\Work\\api-dashboards\\src\\index.tsx":"1","C:\\Work\\api-dashboards\\src\\reportWebVitals.js":"2","C:\\Work\\api-dashboards\\src\\App.tsx":"3","C:\\Work\\api-dashboards\\src\\stores\\index.tsx":"4","C:\\Work\\api-dashboards\\src\\components\\Firebase\\index.tsx":"5","C:\\Work\\api-dashboards\\src\\stores\\sessionStore.tsx":"6","C:\\Work\\api-dashboards\\src\\stores\\messageStore.tsx":"7","C:\\Work\\api-dashboards\\src\\stores\\userStore.tsx":"8","C:\\Work\\api-dashboards\\src\\stores\\itemStore.tsx":"9","C:\\Work\\api-dashboards\\src\\components\\Firebase\\context.tsx":"10"},{"size":925,"mtime":1609408137009,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609404530437,"results":"13","hashOfConfig":"12"},{"size":528,"mtime":1609404446072,"results":"14","hashOfConfig":"12"},{"size":605,"mtime":1598472524761,"results":"15","hashOfConfig":"12"},{"size":14963,"mtime":1607963763225,"results":"16","hashOfConfig":"12"},{"size":312,"mtime":1594657919160,"results":"17","hashOfConfig":"12"},{"size":584,"mtime":1594660398085,"results":"18","hashOfConfig":"12"},{"size":646,"mtime":1594660318103,"results":"19","hashOfConfig":"12"},{"size":2458,"mtime":1604438180180,"results":"20","hashOfConfig":"12"},{"size":329,"mtime":1594577763635,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1j211jo",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\api-dashboards\\src\\index.tsx",["46"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"mobx-react\";\nimport store from \"./stores\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...store}>\n      <FirebaseContext.Provider value={new Firebase()}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </FirebaseContext.Provider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"C:\\Work\\api-dashboards\\src\\reportWebVitals.js",[],["49","50"],"C:\\Work\\api-dashboards\\src\\App.tsx",[],"C:\\Work\\api-dashboards\\src\\stores\\index.tsx",[],"C:\\Work\\api-dashboards\\src\\components\\Firebase\\index.tsx",[],"C:\\Work\\api-dashboards\\src\\stores\\sessionStore.tsx",[],"C:\\Work\\api-dashboards\\src\\stores\\messageStore.tsx",[],"C:\\Work\\api-dashboards\\src\\stores\\userStore.tsx",["51"],"import { observable, action, computed } from \"mobx\";\r\n\r\ninterface appUsers {\r\n  u: any;\r\n  uid: any;\r\n}\r\n\r\nclass UserStore {\r\n  @observable users: any = {};\r\n  rootStore: any;\r\n\r\n  constructor(rootStore: any) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @action setUsers = (users: any) => {\r\n    this.users = users;\r\n  };\r\n\r\n  @action setUser = (user: any, uid: any) => {\r\n    if (!this.users) {\r\n      this.users = {};\r\n    }\r\n\r\n    this.users[uid] = user;\r\n  };\r\n\r\n  @computed get userList() {\r\n    return Object.keys(this.users || {}).map((key) => ({\r\n      ...this.users[key],\r\n      uid: key,\r\n    }));\r\n  }\r\n}\r\n\r\nexport default UserStore;\r\n","C:\\Work\\api-dashboards\\src\\stores\\itemStore.tsx",[],"C:\\Work\\api-dashboards\\src\\components\\Firebase\\context.tsx",[],{"ruleId":"52","severity":1,"message":"53","line":10,"column":13,"nodeType":"54","messageId":"55","endLine":10,"endColumn":26},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":3,"column":11,"nodeType":"54","messageId":"55","endLine":3,"endColumn":19},"@typescript-eslint/no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'appUsers' is defined but never used.","no-global-assign","no-unsafe-negation"]